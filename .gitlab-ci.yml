deploy-k8s:
  stage: deploy
  image:
    name: amazon/aws-cli:2.13.22
    entrypoint: [""]
  script:
    - yum install -y unzip
    - curl -LO "https://dl.k8s.io/release/$(curl -L -s https://dl.k8s.io/release/stable.txt)/bin/linux/amd64/kubectl"
    - install -o root -g root -m 0755 kubectl /usr/local/bin/kubectl
    - aws eks update-kubeconfig --region "$AWS_DEFAULT_REGION" --name "$EKS_CLUSTER_NAME" --kubeconfig "$KUBECONFIG"
    # Install cert-manager CRDs (adjust version as needed)
    - kubectl apply -f https://github.com/cert-manager/cert-manager/releases/download/v1.11.0/cert-manager.crds.yaml
    # Ensure required namespaces exist
    - kubectl create namespace cert-manager || true
    - kubectl create namespace monitoring || true
    # Wait until ClusterIssuer is available (retry up to 10 times, 5 seconds apart)
    - |
      for i in {1..10}; do
        if kubectl api-resources | grep -q 'ClusterIssuer'; then
          echo "ClusterIssuer CRD is available."
          break
        else
          echo "Waiting for ClusterIssuer CRD to be available..."
          sleep 5
        fi
      done
    # Apply namespace resources from your repository
    - kubectl apply -f k8s/namespace.yml
    # Apply all remaining Kubernetes manifests
    - kubectl apply -f k8s/ --validate=false --server-side=true
  environment:
    name: production
    kubernetes:
      namespace: production
  only:
    - main
